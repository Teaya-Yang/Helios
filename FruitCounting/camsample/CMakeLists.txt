# Helios standard CMakeLists.txt file version 1.6

#-------- USER INPUTS ---------#

#provide the path to Helios base directory, either as an absolut path or a path relative to the location of this file
set( BASE_DIRECTORY "../.." )

#define the name of the executable to be created
set( EXECUTABLE_NAME "sampleCamera" )

#provide name of source file(s) (separate multiple file names with semicolon)
set( SOURCE_FILES "main.cpp" )

#specify which plug-ins to use (separate plug-in names with semicolon)
set( PLUGINS "canopygenerator"; "visualizer" )

#-------- MAIN CODE (Dont Modify) ---------#
if ( WIN32 )
   cmake_minimum_required(VERSION 3.15)
   project(helios)
   SET(CMAKE_C_COMPILER_ID "MSVC")
   SET(CMAKE_CXX_COMPILER_ID "MSVC")
   SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /std:c++latest")
   string(REGEX REPLACE "/MD*" "/MT" CMAKE_C_FLAGS "${CMAKE_C_FLAGS}")
   string(REGEX REPLACE "/MD*" "/MT" CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}")
   cmake_policy(SET CMP0091 NEW)
   set( CMAKE_MSVC_RUNTIME_LIBRARY "MultiThreaded")
else()
   cmake_minimum_required(VERSION 2.5)
   project(helios)
   SET(CMAKE_C_COMPILER_ID "GNU")
   SET(CMAKE_CXX_COMPILER_ID "GNU")
   SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
   if( CMAKE_BUILD_TYPE STREQUAL Debug )
      SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -g" )
      SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -g")
   endif()
endif()
if(NOT DEFINED CMAKE_SUPPRESS_DEVELOPER_WARNINGS)
   set(CMAKE_SUPPRESS_DEVELOPER_WARNINGS 1 CACHE INTERNAL "No dev warnings")
endif()
set( EXECUTABLE_NAME ${EXECUTABLE_NAME} )
set( LIBRARY_OUTPUT_PATH ${PROJECT_BINARY_DIR}/lib )
add_executable( ${EXECUTABLE_NAME} ${SOURCE_FILES} )
add_subdirectory( "${BASE_DIRECTORY}/core" "lib" )
target_link_libraries( ${EXECUTABLE_NAME} helios)
LIST(LENGTH PLUGINS PLUGIN_COUNT)
message("-- Loading ${PLUGIN_COUNT} plug-ins")
foreach(PLUGIN ${PLUGINS})
   message("-- loading plug-in ${PLUGIN}")
   if( ${PLUGIN} STREQUAL ${EXECUTABLE_NAME} )
      message( FATAL_ERROR "The executable name cannot be the same as a plugin name. Please rename your executable." )
   endif()
   add_subdirectory( "${BASE_DIRECTORY}/plugins/${PLUGIN}" "${PROJECT_BINARY_DIR}/plugins/${PLUGIN}" )
   target_link_libraries( ${EXECUTABLE_NAME} ${PLUGIN} )
endforeach(PLUGIN)
include_directories( "${PLUGIN_INCLUDE_PATHS};${CMAKE_CURRENT_SOURCE_DIRECTORY}" )